@use 'sass:list';
@use 'sass:map';

@use 'mq';
@use 'variables';

$text-sizes: (
	'xl': (36px, 36px),
	'lg': (24px, 25px),
	'md': (18px, 20px),
	'sm': (16px, 18px),
	'xs': (14px, 15px)
);

$text-sizes_v2: (
	body1: (
		sm: (16px, 18px, 600),
		md: (16px, 18px, 600),
		lg: (18px, 20px, 600),
		xl: (18px, 20px, 600),
	),
	body2: (
		sm: (14px, 16px, 600),
		md: (14px, 16px, 600),
		lg: (16px, 18px, 600),
		xl: (16px, 18px, 600)
	),
	label: (
		sm: (14px, 16px, 800),
		md: (14px, 16px, 800),
		lg: (14px, 16px, 800),
		xl: (14px, 16px, 800)
	)
);

@mixin text_v2($type: body1, $size: null, $height: null, $weight: null, $responsive: true) {
	$sizes: map.get($text-sizes_v2, $type);
	$values: map.get($sizes, sm);
	$font-size: $size or list.nth($values, 1);
	$line-height: $height or list.nth($values, 2);
	$font-weight: $weight or list.nth($values, 3);

	font-size: $font-size;
	line-height: $line-height;
	font-weight: $font-weight;

	@if $responsive {
		@include mq.from(md) {
			$values: map.get($sizes, md);
			$font-size: list.nth($values, 1);
			$line-height: list.nth($values, 2);
			$font-weight: $weight or list.nth($values, 3);

			font-size: $font-size;
			line-height: $line-height;
			font-weight: $font-weight;
		}

		@include mq.from(lg) {
			$values: map.get($sizes, lg);
			$font-size: list.nth($values, 1);
			$line-height: list.nth($values, 2);
			$font-weight: $weight or list.nth($values, 3);

			font-size: $font-size;
			line-height: $line-height;
			font-weight: $font-weight;
		}

		@include mq.from(xl) {
			$values: map.get($sizes, xl);
			$font-size: list.nth($values, 1);
			$line-height: list.nth($values, 2);
			$font-weight: $weight or list.nth($values, 3);

			font-size: $font-size;
			line-height: $line-height;
			font-weight: $font-weight;
		}
	}
}

@mixin text($size: 'md', $weight: 600) {
	$sizes: map.get($text-sizes, $size);
	$font-size: list.nth($sizes, 1);
	$line-height: list.nth($sizes, 2);

	font-size: $font-size;
	font-weight: $weight;
	line-height: $line-height;
}

@mixin body1($weight: null, $responsive: true) {
	@include text_v2(body1, $weight: $weight, $responsive: $responsive);
}

@mixin body2($weight: null, $responsive: true) {
	@include text_v2(body2, $weight: $weight, $responsive: $responsive);
}

@mixin label($weight: null, $responsive: true) {
	@include text_v2(label, $weight: $weight, $responsive: $responsive);

	letter-spacing: 0.1em;
	text-transform: uppercase;
}

@mixin handwritten {
	font-family: 'Shantell Sans';
	font-size: 14px;
	font-style: italic;
	font-weight: 400;
	line-height: 15px;

	@include mq.from(md) {
		font-size: 16px;
		line-height: 18px;
	}
}

.text {
	@include text_v2;

	&--body1 {
		@include body1;
	}

	&--body2 {
		@include body2;
	}

	&--label {
		@include label;
	}

	&--inline {
		display: inline;
		margin: 0;
	}

	&--block {
		display: block;
		margin-bottom: 1rem;
	}

	&--muted {
		color: lighten(variables.$black, 50%);
	}

	&--purple {
		color: variables.$purple;
	}

	&--yellow {
		color: variables.$yellow;
	}

	&--italic {
		font-style: italic;
	}

	&--semibold{
		font-weight: 700;
	}

	&--bold {
		font-weight: 800;
	}

	&--left {
		text-align: left;
	}

	&--center {
		text-align: center;
	}

	&--right {
		text-align: right;
	}

	&--uppercase {
		text-transform: uppercase;
	}

	&--underline {
		text-decoration: underline;
	}

	p + p,
	& + & {
		margin-top: 10px;
	}
}

.asterisk-text {
	
}

.handwritten {
	@include handwritten;
}